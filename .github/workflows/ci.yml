name: helerm-ci

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  POSTGRES_DB: test_helerm
  POSTGRES_USER: root
  POSTGRES_PASSWORD: root
  DATABASE_URL: "postgres://root:root@localhost:5432/test_helerm"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ 3.7 ]
    services:
      postgres:
        image: postgres:10.6
        env:
          # Note: not redundant, parent env is not applied to service
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: test_helerm
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Required by Sonar
          fetch-depth: 0

      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev

      - name: System requirements for Django
        run: sudo apt-get install gdal-bin gettext postgresql-client

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install codecov -r requirements.txt -r requirements-dev.txt
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Check migrations
        run: |
          python manage.py makemigrations --dry-run --check
      - name: Apply migrations
        run: |
          python manage.py migrate
      - name: Check black
        run: |
          black --check .
      - name: Check flake8
        uses: liskin/gh-problem-matcher-wrap@v2
        with:
          linters: flake8
          run: flake8

      - name: Check isort
        uses: liskin/gh-problem-matcher-wrap@v2
        with:
          linters: isort
          run: isort . --check-only --diff

      # With pytest-cov use: --cov=.
      # Some errors, skipping --doctest-modules for now
      - name: Run tests
        uses: liskin/gh-problem-matcher-wrap@v2
        with:
          linters: pytest
          run: pytest -ra -vvv --cov=.

      - name: Codecov
        uses: codecov/codecov-action@v3
